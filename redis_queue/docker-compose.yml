version: '3.8' # 使用较新的 compose 文件版本

services:
  redis:
    image: redis:7.2-alpine # 建议指定明确的版本，alpine 版本更小
    container_name: order-management-redis-service # 给容器一个明确的名字
    restart: always # 保证容器异常退出后总是尝试重启
    ports:
      - "6379:6379" # 将宿主机的 6380 端口映射到容器的 6379 端口
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf # 挂载本地配置文件到容器内
      - redis_data:/data # 挂载命名数据卷，用于持久化 Redis 数据
    command: redis-server /usr/local/etc/redis/redis.conf # 启动 Redis 并指定使用我们的配置文件
    networks:
      - redis-net # 将 Redis 放入自定义网络，便于管理和隔离（可选，但推荐）
    # --- 资源限制 (根据你的服务器情况调整) ---
    mem_limit: 1g # 限制容器最大使用内存，例如 1GB。根据你的 redis.conf 中的 maxmemory 调整
    # memswap_limit: 1g # 限制内存+交换空间
    # cpus: '0.5' # 限制 CPU 使用，例如最多使用半个核心
    # --- 健康检查 (可选，但推荐) ---
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "-p", "6379", "ping"]
      interval: 10s # 每 10 秒检查一次
      timeout: 5s  # 检查超时时间 5 秒
      retries: 5   # 重试 5 次失败后标记为 unhealthy
      start_period: 10s # 容器启动后 10 秒开始健康检查
    # --- 优化内核参数 (可选，需要宿主机支持) ---
    # sysctls:
    #   net.core.somaxconn: '511' # 提高 TCP 连接队列长度，应对高并发
    #   vm.overcommit_memory: '1' # 允许内存超售，Redis 官方推荐，特别是使用 BGSAVE 或 AOF rewrite 时

volumes:
  redis_data: # 定义命名数据卷，由 Docker 管理，比绑定挂载主机目录更推荐

networks:
  redis-net: # 定义自定义网络

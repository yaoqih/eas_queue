# --- 网络 ---
# bind 0.0.0.0
# Docker 环境通常不需要修改，监听容器内所有接口
port 6379
# Redis 在容器内监听的端口

# --- 安全 ---
# 重要：设置一个强密码！
requirepass Order123
# rename-command CONFIG ""
# 禁用危险命令，例如 CONFIG (如果不需要在线修改配置)
# rename-command FLUSHALL ""
# 禁用 FLUSHALL
# rename-command FLUSHDB ""
# 禁用 FLUSHDB

# --- 内存管理 ---
# 重要：设置最大内存限制，略小于 Docker 的 mem_limit (如果设置了)
maxmemory 800mb
# 例如，设置为 800MB (根据你的 docker-compose mem_limit 和实际需求调整)
# 重要：选择合适的内存淘汰策略
maxmemory-policy allkeys-lru
# 例如：移除最近最少使用的 key (其他选项: volatile-lru, allkeys-random, volatile-random, allkeys-ttl, volatile-ttl, noeviction 等)

# --- 持久化 ---
# 建议使用 AOF (Append Only File) 以获得更好的数据安全性
appendonly yes
appendfilename "appendonly.aof"
# AOF 同步策略 (everysec 是性能和安全的良好折衷)
# appendfsync always
# 最安全，但最慢
appendfsync everysec
# appendfsync no
# 最快，但最不安全

# 如果不主要依赖 RDB，可以禁用或降低 RDB 快照频率来减少 BGSAVE 开销
# save ""
# 完全禁用 RDB
save 900 1
# 900 秒内至少有 1 个 key 改变
save 300 10
# 300 秒内至少有 10 个 key 改变
save 60 10000
# 60 秒内至少有 10000 个 key 改变

# 持久化文件存储目录 (与 docker-compose volume 对应)
dir /data

# --- 日志 ---
loglevel notice
# 日志级别 (debug, verbose, notice, warning)
logfile ""
# 输出到标准输出，方便 Docker 收集日志

# --- 其他推荐配置 ---
tcp-keepalive 300
# TCP Keepalive，防止空闲连接被防火墙断开
stop-writes-on-bgsave-error yes
# RDB BGSAVE 失败时停止写入，保护数据一致性
rdbcompression yes
# RDB 文件压缩
rdbchecksum yes
# RDB 文件校验

# --- Docker 环境必备 ---
daemonize no
# 必须为 no，让 Redis 在前台运行，由 Docker 管理
supervised no
# 不需要 Redis 的进程管理，交给 Docker

